<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <meta name="description" content="">
  <meta name="author" content="">
  <!-- <link rel="icon" href="../../../../favicon.ico"> -->
  <title>Home page - Заявки</title>

  <% include ../common/bootstrap_css.ejs %>
  <link href="/bower_components/eonasdan-bootstrap-datetimepicker/build/css/bootstrap-datetimepicker.min.css" rel="stylesheet">
  <link href="/theme.css" rel="stylesheet">
</head>

<body role="document">

  <% include ../common/full_menu.ejs %>

  <div class="container-fluid">
    <div class="row">
      <div class="col-xs-9">
        <ol class="breadcrumb">
          <li><a href="#">Документы</a></li>
          <li>Текущие заявки</li>
        </ol>
      </div>
      <div class="col-xs-3">
        <ul class="nav nav-pills pull-right">
          <li role="presentation" class="active"><a href="#">Текущие</a></li>
          <li role="presentation"><a href="/applications/completed">Выполненные</a></li>
        </ul>
      </div>
    </div>
    <form class="form-inline" role="form" method="get" action="/applications/filter" id="applicationsForm">
      <input type="text" hidden id="filters" name="filters" value="<%= JSON.stringify(filters) %>">
      <div class="input-group date my-tooltip" id="startDate" data-toggle="tooltip" data-placement="top" title="Начальная дата">
        <input type="text" class="form-control" name="startDate" value="<%= moment(filters.period.start).format( 'DD.MM.YYYY HH:mm' ) %>" <%= filters.period.allRecords ? 'readonly' : '' %> />
        <span class="input-group-addon">
            <span class="glyphicon glyphicon-calendar"></span>
        </span>
      </div>
      <div class="input-group date my-tooltip" id="endDate" data-toggle="tooltip" data-placement="top" title="Конечная дата">
        <input type="text" class="form-control" name="endDate" value="<%= moment(filters.period.end).format( 'DD.MM.YYYY HH:mm' ) %>" <%= filters.period.allRecords ? 'readonly' : '' %> />
        <span class="input-group-addon">
            <span class="glyphicon glyphicon-calendar"></span>
        </span>
      </div>
      &nbsp;
      <div class="checkbox">
        <label><input type="checkbox" name="allRecords" id="allRecords" <%= filters.period.allRecords ? ' checked' : '' %>> Все </label>
      </div>
      &nbsp;
      <button type="submit" class="btn btn-success" name="applyFilter">&nbsp;Применить фильтр&nbsp;</button>
      <a href="/applications/add" class="btn btn-default" data-toggle="tooltip" data-placement="top"
        title="Новая заявка"><span class="glyphicon glyphicon-plus" aria-hidden="true"></span></a>
      <button type="submit" class="btn btn-default" data-toggle="tooltip" data-placement="top" title="Скачать отчет"
        name="downloadReport"><span class="glyphicon glyphicon-cloud-download" aria-hidden="true"></span></button>
      &nbsp;
      <div class="checkbox">
        <label><input type="checkbox" name="emptyPerformers" id="emptyPerformers" <%= filters.emptyPerformers ? ' checked' : '' %>> Неотданные исполнители </label>
      </div>
    </form>
    <p>
      <table class="table table-bordered table-hover table-condensed">
        <thead>
          <tr class="active">
            <th style="width: 10%; vertical-align: middle" rowspan="2" class="text-center" onclick="sortBy()"><span>Дата</span>&nbsp;<span class="glyphicon <%= filters.period.sortBy == 'ASC' ? 'glyphicon-arrow-up' : 'glyphicon-arrow-down' %>"></span></th>
            <th style="width: 15%;" class="text-center align-middle">Город</th>
            <th style="width: 15%;" class="text-center align-middle">Улица</th>
            <th style="width: 6%;" class="text-center align-middle">Дом</th>
            <th style="width: 6%;  vertical-align: middle" rowspan="2" class="text-center align-middle">Номера</th>
            <th style="width: 10%;" class="text-center align-middle">Исполнитель</th>
            <th style="width: 30%; vertical-align: middle" rowspan="2" class="text-center align-middle">Описание проблем
            </th>
            <th style="width: 8%; vertical-align: middle" rowspan="2" class="text-center align-middle">Действия</th>
          </tr>
          <tr class="active">
            <td>
              <div class="input-group">
                <span class="input-group-btn">
                  <button class="btn btn-default" type="button" id="clearCity">
                    <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
                  </button>
                </span>
                <input type="text" class="form-control" placeholder="Город" name="findCity" id="findCity"
                  value="<%= +filters.city.id === 0 ? '' : filters.city.name %>">
              </div>
            </td>
            <td>
              <div class="input-group">
                <span class="input-group-btn">
                  <button class="btn btn-default" type="button" id="clearStreet">
                    <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
                  </button>
                </span>
                <input type="text" class="form-control" placeholder="Улица" name="findStreet" id="findStreet"
                  value="<%= +filters.street.id === 0 ? '' : filters.street.name %>">
              </div>
            </td>
            <td>
              <div class="input-group">
                <span class="input-group-btn">
                  <button class="btn btn-default" type="button" id="clearHouse">
                    <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
                  </button>
                </span>
                <input type="text" class="form-control" placeholder="Дом" name="findHouse" id="findHouse"
                  value="<%= +filters.house.id === 0 ? '' : filters.house.number %>">
              </div>
            </td>
            <td>
              <div class="input-group">
                <span class="input-group-btn">
                  <button class="btn btn-default" type="button" id="clearPerformer">
                    <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
                  </button>
                </span>
                <input type="text" class="form-control" placeholder="Исполнитель" name="findPerformer"
                  id="findPerformer" value="<%= +filters.performer.id === 0 ? '' : filters.performer.name %>" <%= filters.emptyPerformers ? " disabled" : "" %>
              </div>
            </td>
          </tr>
        </thead>
        <tbody>
          <% for (var ind = 0, max = data.length; ind < max; ind++) {%>

          <% if (+data[ind].weight === -1) { %>
            <tr class="danger">
          <% } else if (+data[ind].weight === 0) { %>
            <tr class="warning">
          <% } else { %>
            <tr>
          <% } %>
            <td class="text-center align-middle">
              <%= moment(data[ind].createDate).format( 'DD.MM.YYYY HH:mm') %>
            </td>
            <td class="text-left align-middle">
              <%= data[ind].cityName %>
            </td>
            <td class="text-left align-middle">
              <%= data[ind].streetName %>
            </td>
            <td class="text-center align-middle">
              <%= data[ind].houseNumber %>
            </td>
            <td class="text-center align-middle">
              <%= data[ind].numeration %>
            </td>
            <td class="text-left align-middle">
              <%= data[ind].performerName %>
            </td>
            <td class="text-left align-middle">
              <% if ((data[ind].completionDate != null) && (data[ind].weight >= 0)) { %>
              <span class="glyphicon glyphicon-calendar" aria-hidden="true">
              <% } %>
              </span>
              <%= 'problemDescription' in data[ind] ? data[ind].problemDescription : '' %>
            </td>
            <td class="text-center align-middle">
              <a href="/applications/edit/<%= data[ind].documentId %>" class="btn btn-info btn-xs" id="edit">
                <span class="glyphicon glyphicon-pencil" aria-hidden="true">
                </span>
              </a>
              <a href="#" onclick="confirmDelete(+<%= data[ind].documentId %>);" class="btn btn-danger btn-xs"
                id="orders_info">
                <span class="glyphicon glyphicon-minus" aria-hidden="true">
                </span>
              </a>
            </td>
          </tr>
          <% } %>
        </tbody>
      </table>
      <% if (pageCount > 0) { %>
      <nav aria-label="...">
        <ul class="pagination text-center table_pagination">
          <% if (currentPage == 1) { %>
          <li class="page-item disabled">
            <span class="page-link">&laquo;</span>
          </li>
          <% } else { %>
          <li class="page-item">
            <a class="page-link" href="/applications">&laquo;
            </a>
          </li>
          <% } %>
          <% var i = (Number(currentPage) > 5 ? Number(currentPage) - 4 : 1) %>
          <% if (i !== 1) { %>
          <li class="page-item disabled">
            <a class="page-link">...</a>
          </li>
          <% } %>
          <% for (; i <= (Number(currentPage) + 4) && i <= pageCount; i++) { %>
          <% if (i == currentPage) { %>
          <li class="page-item active">
            <span class="page-link">
              <%= i %>
              <span class="sr-only">(current)</span>
            </span>
          </li>
          <% } else { %>
          <li class="page-item">
            <a class="page-link" href="/applications/<%= (i == 1) ? '' : (i - 1) * Number(visibleRows) %>">
              <%= i %>
            </a>
          </li>
          <% } %>
          <% if (i == Number(currentPage) + 4 && i < pageCount) { %>
          <li class="page-item disabled">
            <a class="page-link">...</a>
          </li>
          <% } %>
          <% } %>
          <% if (currentPage == pageCount) { %>
          <li class="page-item disabled">
            <a class="page-link">&raquo;</a>
          </li>
          <% } else { %>
          <li class="page-item">
            <a class="page-link" href="/applications/<%= (pageCount - 1) * Number(visibleRows) %>">&raquo;</a>
          </li>
          <% } %>
        </ul>
      </nav>
      <% } %>
      <div class="row">
        <div class="col-xs-12">
          <div class="alert alert-info">Записей: <strong><%= countRecords %></strong>, из них неотданных: <strong><%= unReleasedData %></strong></div>
        </div>
      </div>
  </div>

  <div class="modal" id="modalDeleteRecord" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
    aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="exampleModalLabel">Подтверждение</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <form>
            <input type="text" hidden id="deletedUID" name="deletedUID" value="">
          </form>
          <p>Удалить запись?</p>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-warning" id="deleteRecord">Удалить</button>
          <button type="button" class="btn btn-secondary" data-dismiss="modal">Отмена</button>
        </div>
      </div>
    </div>
  </div>

  <% include ../common/warning_window.ejs %>

  <script src="/bower_components/jquery/dist/jquery.min.js"></script>
  <script src="/bower_components/bootstrap/dist/js/bootstrap.min.js"></script>
  <script src="/bower_components/moment/min/moment-with-locales.min.js"></script>
  <script src="/bower_components/bootstrap/js/transition.js"></script>
  <script src="/bower_components/bootstrap/js/collapse.js"></script>
  <script src="/bower_components/eonasdan-bootstrap-datetimepicker/build/js/bootstrap-datetimepicker.min.js"></script>
  <script src="/bower_components/bootstrap3-typeahead/bootstrap3-typeahead.js"></script>
  <script src="/bower_components/axios/dist/axios.min.js"></script>
  <script>

    $('[data-toggle="tooltip"]').tooltip();

    $('#startDate').datetimepicker({
      locale: 'ru',
      format: 'L',
      ignoreReadonly: false
    }).on('dp.change', function (e) {
      var data = $('#filters').val();
      try {
        var filters = JSON.parse(data);
        filters.period.start = moment(e.date).format('YYYY-MM-DD HH:mm');
        $('#filters').val(JSON.stringify(filters));
      }
      catch (e) {
        console.log(e.message);
      }
    });

    $('#endDate').datetimepicker({
      locale: 'ru',
      format: 'L',
      ignoreReadonly: false
    }).on('dp.change', function (e) {
      var data = $('#filters').val();
      try {
        var filters = JSON.parse(data);
        filters.period.end = moment(e.date).format('YYYY-MM-DD HH:mm');
        $('#filters').val(JSON.stringify(filters));
      }
      catch (e) {
        console.log(e.message);
      }
    });

    $('#allRecords').on('click', function (e) {
      var data = $('#filters').val();
      try {
        var filters = JSON.parse(data);
        filters.period.allRecords = e.currentTarget.checked;
        $('[name="startDate"]').prop("readonly", e.currentTarget.checked);
        $('[name="endDate"]').prop("readonly", e.currentTarget.checked);
        $('#filters').val(JSON.stringify(filters));
      }
      catch (e) {
        console.log(e.message);
      }
    });

    function confirmDelete(id) {
      $('#deletedUID').val(id);
      $('#modalDeleteRecord').modal({ 'keyboard': true });
    }

    function clearCity() {
      $('#findCity').val('');
    }

    function clearStreet() {
      $('#findStreet').val('');
    }

    function clearHouse() {
      $('#findHouse').val('');
    }

    function clearPerformer() {
      $('#findPerformer').val('');
    }

    function sortBy() {
      var data = $('#filters').val();
        try {
          var filters = JSON.parse(data);
          var sortBy = filters.period.sortBy;
          filters.period.sortBy = (sortBy == 'ASC' ? 'DESC' : 'ASC');
          $('#filters').val(JSON.stringify(filters));

          document.getElementById("applicationsForm").submit();
        }
        catch (e) {
          console.log(e.message);
        }
      }

      document.getElementById('emptyPerformers').addEventListener('click', function (e) {
        var data = $('#filters').val();
        try {
          var filters = JSON.parse(data);
          filters.emptyPerformers = e.currentTarget.checked;
          $('#filters').val(JSON.stringify(filters));
          document.getElementById('findPerformer').disabled = e.currentTarget.checked;
        }
        catch (e) {
          console.log(e.message);
        }
      });

    $(document).ready(function () {

      $('[data-toggle="tooltip"]').tooltip();

      $('#deleteRecord').click(function () {
        $('#modalDeleteRecord').modal('hide');
        $.ajax({
          type: 'POST',
          url: '/applications/delete',
          dataType: 'json',
          async: true,
          data: {
            'id': $('#deletedUID').val()
          },
          success: function (data) {
            var path = window.location.origin + '/applications';
            window.location.href = path;
            return;
          },
          error: function (data) {
            //
          }
        });

      });

      $('#filterCities').keyup(function (e) {
        if (e.keyCode == 13) {
          //
        }
      });

      // Clear values
      $('#clearCity').click(function () {
        clearCity();
        clearStreet();
        clearHouse();
        var data = $('#filters').val();
        try {
          var filters = JSON.parse(data);
          filters.city.id = 0;
          filters.city.name = '';

          filters.street.id = 0; // street
          filters.street.name = '';
          filters.street.cityId = 0;

          filters.house.id = 0; // house
          filters.house.number = '';
          filters.house.streetId = 0;

          $('#filters').val(JSON.stringify(filters));
          $('#findCity').focus();
        }
        catch (e) {
          console.log(e.message);
        }
      });

      $('#clearStreet').click(function () {
        clearStreet();
        clearHouse();
        var data = $('#filters').val();
        try {
          var filters = JSON.parse(data);
          filters.street.id = 0; // street
          filters.street.name = '';
          filters.street.cityId = 0;

          filters.house.id = 0; // house
          filters.house.number = '';
          filters.house.streetId = 0;

          $('#filters').val(JSON.stringify(filters));
          $('#findStreet').focus();
        }
        catch (e) {
          console.log(e.message);
        }
      });

      $('#clearHouse').click(function () {
        clearHouse();
        var data = $('#filters').val();
        try {
          var filters = JSON.parse(data);
          filters.house.id = 0; // house
          filters.house.number = '';
          filters.house.streetId = 0;

          $('#filters').val(JSON.stringify(filters));
          $('#findHouse').focus();
        }
        catch (e) {
          console.log(e.message);
        }
      });

      $('#clearPerformer').click(function () {
        clearPerformer();
        var data = $('#filters').val();
        try {
          var filters = JSON.parse(data);
          filters.performer.id = 0;
          filters.performer.name = '';

          $('#filters').val(JSON.stringify(filters));
          $('#findPerformer').focus();
        }
        catch (e) {
          console.log(e.message);
        }
      });


      // Typeaheads

      $('#findCity').typeahead({
        items: 15,
        source: function (query, process) {
          var results = [];
          map = {};

          axios.post('/applications/find_city', {
            cityName: query,
            limit: 15
          }
          ).then(function (response) {
              var data = response.data;
              data.forEach( function (item) {
                map[item.value] = item;
                results.push(item.value);
              });
              process(results);
          }).catch(function (error) {
            console.log(error);
          });
        },
        updater: function (element) {
          var data = $('#filters').val();
          try {
            var filters = JSON.parse(data);
            filters.city.id = map[element].id;
            filters.city.name = map[element].value;
            $('#filters').val(JSON.stringify(filters));
          }
          catch (e) {
            console.log(e.message);
          }
          return element;
        }
      });

      $('#findStreet').typeahead({
        items: 15,
        source: function (query, process) {
          var results = [];
          map = {};
          var cityId = 0;
          var data = $('#filters').val();
          try {
            var filters = JSON.parse(data);
            cityId = filters.city.id;
          }
          catch (e) {
            console.log(e.message);
          }

          axios.post('/applications/find_street', {
            streetName: query,
            cityId: cityId,
            limit: 15
          }
          ).then(function (response) {
              var data = response.data;
              data.forEach( function (item) {
                map[item.value] = item;
                results.push(item.value);
              });
              process(results);
          }).catch(function (error) {
            console.log(error);
          });
        },
        updater: function (element) {
          var data = $('#filters').val();
          try {
            var filters = JSON.parse(data);
            filters.street.id = map[element].id;
            filters.street.name = map[element].value;
            filters.street.cityId = map[element].cityId;
            $('#filters').val(JSON.stringify(filters));
          }
          catch (e) {
            console.log(e.message);
          }
          return element;
        }
      });

      $('#findHouse').typeahead({
        items: 15,
        source: function (query, process) {
          var results = [];
          map = {};
          var streetId = 0;
          var data = $('#filters').val();
          try {
            var filters = JSON.parse(data);
            streetId = filters.street.id;
          }
          catch (e) {
            console.log(e.message);
          }

          axios.post('/applications/find_house', {
            houseNumber: query,
            streetId: streetId,
            limit: 15
          }
          ).then(function (response) {
              var data = response.data;
              data.forEach( function (item) {
                map[item.value] = item;
                results.push(item.value);
              });
              process(results);
          }).catch(function (error) {
            console.log(error);
          });
        },
        updater: function (element) {
          var data = $('#filters').val();
          try {
            var filters = JSON.parse(data);
            filters.house.id = map[element].id;
            filters.house.number = map[element].value;
            filters.house.streetId = map[element].streetId;
            $('#filters').val(JSON.stringify(filters));
          }
          catch (e) {
            console.log(e.message);
          }
          return element;
        }
      });

      $('#findPerformer').typeahead({
        items: 15,
        source: function (query, process) {
          var results = [];
          map = {};

          axios.post('/applications/find_performer', {
            performerName: query,
            limit: 15
          }
          ).then(function (response) {
              var data = response.data;
              data.forEach( function (item) {
                map[item.value] = item;
                results.push(item.value);
              });
              process(results);
          }).catch(function (error) {
            console.log(error);
          });
        },
        updater: function (element) {
          var data = $('#filters').val();
          try {
            var filters = JSON.parse(data);
            filters.performer.id = map[element].id;
            filters.performer.name = map[element].value;
            $('#filters').val(JSON.stringify(filters));
          }
          catch (e) {
            console.log(e.message);
          }
          return element;
        }
      });

});

  </script>
</body>

</html>